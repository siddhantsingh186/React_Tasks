{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SID\\\\Documents\\\\React_Tasks\\\\products\\\\src\\\\ProductComponent\\\\Products.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Products.css';\nimport Card from 'react-bootstrap/Card';\nimport GetProductList from '../APIcalls/GetProductList';\nimport { useState } from 'react';\nimport SearchProducts from '../SearchFilter/SearchProducts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductList() {\n  _s();\n  const {\n    loading,\n    productsList\n  } = GetProductList();\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fake Store Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products\",\n      children: [/*#__PURE__*/_jsxDEV(SearchProducts, {\n        products: productsList,\n        setFilteredProducts: setFilteredProducts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), filteredProducts.length > 0 ? filteredProducts['products'].map(_ref => {\n        let {\n          id,\n          thumbnail,\n          title,\n          brand,\n          description,\n          category,\n          price,\n          rating\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          className: \"product\",\n          style: {\n            width: '18rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Brand - \", brand]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Category - \", category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Price - \", price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Rating - \", rating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this);\n      }) : productsList['products'].map(_ref2 => {\n        let {\n          id,\n          thumbnail,\n          title,\n          brand,\n          description,\n          category,\n          price,\n          rating\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          className: \"product\",\n          style: {\n            width: '18rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Brand - \", brand]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Category - \", category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Price - \", price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Rating - \", rating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(ProductList, \"VC+/o9ktF3sI2jz0GYJsSMwuX2I=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","Card","GetProductList","useState","SearchProducts","ProductList","loading","productsList","filteredProducts","setFilteredProducts","length","map","id","thumbnail","title","brand","description","category","price","rating","width"],"sources":["C:/Users/SID/Documents/React_Tasks/products/src/ProductComponent/Products.js"],"sourcesContent":["import React from 'react';\r\nimport './Products.css'\r\nimport Card from 'react-bootstrap/Card';\r\nimport GetProductList from '../APIcalls/GetProductList';\r\nimport { useState } from 'react';\r\nimport SearchProducts from '../SearchFilter/SearchProducts';\r\nfunction ProductList () {\r\n    const {loading, productsList} = GetProductList();\r\n    const [filteredProducts, setFilteredProducts] = useState([]);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n    return (\r\n        <div>\r\n        <h1>Fake Store Products</h1>\r\n            <div className=\"products\">\r\n                <SearchProducts products = {productsList} setFilteredProducts={setFilteredProducts} />\r\n                {filteredProducts.length > 0 ? (filteredProducts['products'].map(({id, thumbnail, title, brand, description, category, price, rating}) => (\r\n                    <Card key={id} className=\"product\" style={{ width: '18rem' }}>\r\n                        <Card.Img variant=\"top\" src={thumbnail} />\r\n                        <Card.Body>\r\n                            <Card.Title>{title}</Card.Title>\r\n                            <Card.Text>\r\n                                {description}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                Brand - {brand}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                Category - {category}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                Price - {price}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                Rating - {rating}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                ))) : (productsList['products'].map(({id, thumbnail, title, brand, description, category, price, rating}) => (\r\n                    <Card key={id} className=\"product\" style={{ width: '18rem' }}>\r\n                        <Card.Img variant=\"top\" src={thumbnail} />\r\n                        <Card.Body>\r\n                            <Card.Title>{title}</Card.Title>\r\n                            <Card.Text>\r\n                                {description}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                Brand - {brand}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                Category - {category}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                Price - {price}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                Rating - {rating}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )))}\r\n            </div>   \r\n        </div>\r\n    );\r\n}\r\nexport default ProductList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}